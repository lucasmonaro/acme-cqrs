
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  cqrs-mysql-command:
    image: mysql:8
    container_name: cqrs-mysql-command
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: acme_cqrs
    ports:
      - "3306:3306"
    networks:
      - broker-kafka

  cqrs-mongo-query:
    image: mongo:latest
    container_name: cqrs-mongo-query
    hostname: cqrs-mongo-query
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: acme-cqrs-query
    command: [ "--bind_ip_all" ]
    ports:
      - "30001:27017"
    networks:
      - broker-kafka
    volumes:
      - ./mongodb/data1:/data/db

networks:
  broker-kafka:
    driver: bridge

